Shawki Izzat
Assignment 3: Clock

When I reflect on the moments in my life that defined me, they all share one thing in common: fear. And I don't mean that in a bad way. I am referring to events in my life where I had to act regardless of how scary or uncertain I felt. I had to take a chance on myself and bite the bullet, even if it meant doing something before I felt I was totally ready. And in retrospect, I never regretted any of those decisions. On the contrary, they are the ones that made me feel most alive.

So when we were asked to brainstorm alternative ways of measuring time, it was a no brainer for me to suggest my clock measures time by the number of chances you take. The design is simple:

The clock is represented by a monkey's face against a white background. In order to create a sense of urgency, there is finite time limit within which the user (you) have to take a chance on yourself, or another words: "Shoot your shot." In theory, I set this time limit as 24hrs, prompting the user to take action within a day for something they truly want. But for the purpose of this assignment and for you to be able to see changes in the clock, I decided to only deal in 15 seconds. 

As soon as the program starts, the 15 seconds timer begins. As time passes by, the hues of the background and the monkey's eyes begin to turn red. The more time elapses, the more deep the red value turns. Moreover, the monkey's expression morphs from a curiously wide eyed face to a disappointed frown, getting angry at the user for not responding with a click. The user is supposed to click the mouse once the they have completed the action they set out to execute, in which case the clock is reset again. If the user fails to execute their action and the times runs out, then the monkey's eyes shut all the way down and a "you missed your shot!" message is displayed, informing the user that they wasted the day and could have done something special if they had just mustered a little courage. 

This particular assignment was personally the most challenging one, because we were introduced to many concepts (mapping, conditions, time) that collectively needed to be incorporated. While I didn't struggle with mapping my changes in visuals to the timer values, I did struggle with the synchronicity of where to place code and the logic behind the time that has passed and the time that remains, and how I needed to use conditions accordingly (especially when attempting to reset the milliseconds that have passed). I am sure that the code I have written can be made more efficient and maybe there is a cleaner way to produce the same clock design and output. Regardless, after spending many hours debugging the issues I ran into, I am quite happy with the way it turned out. 